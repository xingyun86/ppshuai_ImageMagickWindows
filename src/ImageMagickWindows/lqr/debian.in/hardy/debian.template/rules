#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Package name
PACKAGE=liblqr-1-0


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
ifneq ($(DEB_HOST_GNU_TYPE),$(DEB_BUILD_GNU_TYPE))
CROSS= --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
else
CROSS= --build $(DEB_BUILD_GNU_TYPE)
endif

# shared library versions, option 1
version=2.0.5
major=2
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

config.status: configure
	dh_testdir
	# Add here commands to configure the package.
	# it saves upstream version of config.{sub,guess}
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	[ -e config.sub.debian ] || cp -pf config.sub config.sub.debian
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	[ -e config.guess.debian ] || cp -pf config.guess config.guess.debian
	cp -f /usr/share/misc/config.guess config.guess
endif
	./configure $(CROSS) --prefix=/usr CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"

build: build-stamp
build-stamp: config.status 
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)
	$(MAKE) -C docs all

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	# Add here commands to clean up after the build process.
	[ ! -f Makefile ] || $(MAKE) distclean
	$(MAKE) -C docs clean

	rm -rf docs/html

	# restore upstream version of config.{sub,guess}
	[ ! -e config.sub.debian ] || mv -f config.sub.debian config.sub
	[ ! -e config.guess.debian ] || mv -f config.guess.debian config.guess

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	# we install all in debian/tmp, in $PKG.install we separate files
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs	ChangeLog
	dh_install		--sourcedir=debian/tmp --list-missing
	dh_installdocs
	dh_installexamples	examples/*
	dh_strip		--dbg-package=$(PACKAGE)-dbg
	dh_compress
	dh_fixperms
	# needed to create shlibs file
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps		-Lliblqr-1-0 -l$(CURDIR)/debian/$(PACKAGE)/usr/lib
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
