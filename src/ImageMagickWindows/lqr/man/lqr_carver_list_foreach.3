.\"     Title: \fBlqr_carver_list_foreach\fR
.\"    Author: Carlo Baldassi
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: 10 Maj 2009
.\"    Manual: LqR library API reference
.\"    Source: LqR library 0.4.1 API (3:1:3)
.\"
.TH "\FBLQR_CARVER_LIST_FOREACH\FR" "3" "10 Maj 2009" "LqR library 0.4.1 API (3:1:3)" "LqR library API reference"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
lqr_carver_list_foreach \- perform operations on all LqrCarver objects in an LqrCarverList object
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <lqr\&.h>
.fi
.ft
.HP 34
.BI "LqrRetVal lqr_carver_list_foreach(LqrCarverList*\ " "list" ", LqrCarverFunc\ " "func" ", LqrDataTok\ " "data" ");"
.HP 44
.BI "LqrRetVal lqr_carver_list_foreach_recursive(LqrCarverList*\ " "list" ", LqrCarverFunc\ " "func" ", LqrDataTok\ " "data" ");"
.SH "DESCRIPTION"
.PP
The function
\fBlqr_carver_list_foreach\fR
can be used to apply the function
\fIfunc\fR
to all the
LqrCarver
objects listed in
\fIlist\fR\&. The parameter
\fIdata\fR
is used to pass arguments to the function\&.
.PP
The
\fIlist\fR
value should be obtained through the function
\fBlqr_carver_list_start\fR(3)\&. The order in the list will then follow the one in which carver objects were attached\&.
.PP
The function
\fIfunc\fR
is of type
LqrCarverFunc, whose prototype is defined by:
.sp
.RS 4
.nf
typedef LqrRetVal (*LqrCarverFunc) (LqrCarver *carver, LqrDataTok data);
                        
.fi
.RE
.sp
The
\fIdata\fR
argument is of type
LqrDataTok, which is defined as a union with the following fields:
.sp
.RS 4
\h'-04'\(bu\h'+03'\fBLqrCarver\fR\fB*\fR
\fIcarver\fR
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fBgint\fR
\fIinteger\fR
.RE
.sp
.RS 4
\h'-04'\(bu\h'+03'\fBgpointer\fR
\fIdata\fR
.RE
.sp
.RE
.PP
The function
\fBlqr_carver_list_foreach_recursive\fR
is equivelant to
\fBlqr_carver_list_foreach\fR, but it works recursively if the
LqrCarver
objects in
\fIlist\fR
have themselves other attached
LqrCarver
objects attached\&. In this case, the function
\fIfunc\fR
will be applied to each element of the list and to each element of the attached list recursively, before moving on to the next element\&.
.SH "SEE ALSO"
.PP

\fBLqrRetVal\fR(3), \fBlqr_carver_attach\fR(3), \fBlqr_carver_list_start\fR(3), \fBlqr_carver_list_current\fR(3), \fBlqr_carver_list_next\fR(3)
.SH "COPYRIGHT"
Copyright \(co 2007-2009 Carlo Baldassi
.br
